KSystemStats Scripts
====================

Simple way to create custom sensors for KDE System Monitor via text streams.

<!-- Image Here -->

Building and instalation
--------

1. Clone repo
```
$ git clone https://github.com/KerJoe/ksystemstats-scripts.git
$ cd ksystemstats-scripts
```

2. Create build directory and compile
```
$ mkdir build
$ cd build
$ cmake ..
$ cmake --build .
```

3. Install into `/usr/lib/qt/plugins/ksystemstats/`
```
# cmake --install
```

4. Restart ksystemstats for changes to take effect
```
$ setsid ksystemstats --replace
```

Script location
---------------

Scripts should be added into `~/.local/share/ksystemstats-scripts/` (which is created after first launch of the script). Adding scripts into subfolders is also supported.

```
~/.local/share/ksystemstats-scripts/
├── example.sh
└── folder
    └── example.py

```

Protocol
--------

The plugin communicates with scripts via stdin and stdout by issuing commands with arguments separated by tabs and ending in a newline, e.g. `"sensor_name\tvalue\n"`. All commands (except `?`) are optional.

### `?` command

The plugins starts by requesting a list of sensors using a `"?"` command, the script should respond by a tab separated list of  all available sensors.

```
> ?
< sensor_1⇥sensor_2⇥sensor_3
```

**Subsequent commands are issued after the sensor name, e.g. `"sensor_1\tvalue\n"`**

### `value` command
A current value of the sensor
```
> sensor_1⇥value
< 63.8
```

### `initial_value` command
A starting value of the sensor
```
> sensor_1⇥value
< 50
```

### `name` command
A human reabable name of the sensor
```
> sensor_1⇥name
< Sensor number one
```

### `short_name` command
A name displayed when there's not enough space for the full name
```
> sensor_1⇥short_name
< Sensor #1
```

### `prefix` command
A prefix before sensor name, e.g. "Unit 1 Sensor number one"
```
> sensor_1⇥prefix
< Unit 1
```

### `description` command
A sensor description
```
> sensor_1⇥description
< The most sensitive sensible sensor
```

### `min` command
A minimum value the sensor value can take (values are not clipped, it is a hint for graphs.)
```
> sensor_1⇥min
< -100
```

### `max` command
A maximum value the sensor value can take (values are not clipped, it is a hint for graphs.)
```
> sensor_1⇥max
< 100
```

### `unit` command
A name of the unit of the sensor value
```
> sensor_1⇥unit
< 100
```

### `variant_type` command
